{"version":3,"file":"static/js/790.738a8c13.chunk.js","mappings":"kLACA,GAAgB,QAAU,yBAAyB,SAAW,0BAA0B,MAAQ,uBAAuB,OAAS,wBAAwB,KAAO,sBAAsB,OAAS,yB,mBCmB9L,EAjBoB,SAACA,GAEnB,IAAIC,EAAcD,EAAME,YAAYC,KAAI,SAACC,EAAEC,GAAH,OACtC,gBAAKC,UAAWC,EAAAA,OAAhB,UACE,UAAC,KAAD,CACEC,GAAI,YAAcJ,EAAEK,GACpBH,UAAW,SAACI,GAAD,OAAWA,EAAKC,SAAWJ,EAAAA,OAAWA,EAAAA,MAFnD,WAIE,gBAAKD,UAAWC,EAAAA,OAAUK,IAAKR,EAAEQ,IAAKC,IAAI,QACzCT,EAAEU,SANwBT,MAWjC,OAAO,yBAAMJ,KCXf,EAJiB,SAACD,GAChB,OAAO,gBAAKM,UAAWC,EAAAA,QAAhB,SAA4BP,EAAMe,W,iDCmCrCC,GAAYC,EAAAA,EAAAA,GAAiB,GAE/BC,EAAc,SAAClB,GACf,OACI,kBAAMmB,SAAUnB,EAAMoB,aAAtB,WACI,SAACC,EAAA,EAAD,CAAOC,KAAM,WAAYC,UAAWC,EAAAA,EAAWC,YAAa,eAAgBC,KAAK,KAAKC,KAAK,KACpFb,KAAM,aAAcc,SAAU,CAACC,EAAAA,EAAUb,MAEhD,0BACI,mBAAQV,UAAU,SAAlB,0EAOhBY,GAAcY,EAAAA,EAAAA,GAAU,CAACC,KAAM,kBAAjBD,CAAoCZ,GAElD,MA/CgB,SAAClB,GAEb,IAAIgC,EAAQhC,EAAMiC,YAEdC,EAAWF,EAAMG,aAAahC,KAAI,SAACiC,EAAG/B,GAAJ,OAClC,SAAC,EAAD,CAAUU,QAASqB,EAAErB,QAASN,GAAI2B,EAAE3B,IAASJ,MAQjD,OAAKL,EAAMqC,QAGP,iBAAK/B,UAAWC,EAAAA,QAAhB,WACI,gBAAKD,UAAWC,EAAAA,MAAhB,UACI,SAAC,EAAD,CAAaL,YAAa8B,EAAM9B,iBAGpC,iBAAKI,UAAWC,EAAAA,SAAhB,UACK2B,GACD,SAAChB,EAAD,CAAaC,SAfR,SAACmB,GACdtC,EAAMuC,YAAYD,EAAOE,YACzBF,EAAOE,WAAa,aAGE,SAAC,KAAD,CAAUhC,GAAI,Y,0DClBxCiC,EAA6B,SAACT,GAAD,MAAY,CACzCK,OAAQL,EAAMU,KAAKL,SCevB,GAAeM,E,QAAAA,KACXC,EAAAA,EAAAA,KAfoB,SAACZ,GACrB,MAAO,CACHC,YAAaD,EAAMC,gBAIA,SAACY,GACxB,MAAO,CACHN,YAAa,SAACC,GACVK,GAASC,EAAAA,EAAAA,GAAmBN,UDPR,SAACO,GAAe,IACtCC,EADqC,0IAEvC,WACI,OAAKC,KAAKjD,MAAMqC,QACT,SAACU,GAAD,UAAeE,KAAKjD,SADI,SAAC,KAAD,CAAUQ,GAAI,eAHV,GACX0C,EAAAA,WAOhC,OAAON,EAAAA,EAAAA,IAAQH,EAARG,CAAoCI,KCI/C,CAGEG","sources":["webpack://app-lesson/./src/components/Dialogs/Dialogs.module.css?1b2e","components/Dialogs/DialogsItem/DialogsItem.jsx","components/Dialogs/Messages/Messages.jsx","components/Dialogs/Dialogs.jsx","hoc/withAuthRedirect.js","components/Dialogs/DialogsContainer.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialogs_dialogs__VoeDz\",\"messages\":\"Dialogs_messages__cAF-Y\",\"names\":\"Dialogs_names__5cKNg\",\"avatar\":\"Dialogs_avatar__IcD8L\",\"item\":\"Dialogs_item__6y7dQ\",\"active\":\"Dialogs_active__Ryl5m\"};","import s from \"./../Dialogs.module.css\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst DialogsItem = (props) => {\r\n\r\n  let dialogsItem = props.dialogsData.map((d,index) => (\r\n    <div className={s.dialog} key={index}>\r\n      <NavLink\r\n        to={\"/dialogs/\" + d.id}\r\n        className={(link) => (link.isActive ? s.active : s.item)}\r\n      >\r\n        <img className={s.avatar} src={d.src} alt=\"ava\" />\r\n        {d.name}\r\n      </NavLink>\r\n    </div>\r\n  ));\r\n\r\n  return <div>{dialogsItem}</div>;\r\n};\r\n\r\nexport default DialogsItem;\r\n","import s from \"./../Dialogs.module.css\";\r\n\r\nconst Messages = (props) => {\r\n  return <div className={s.message}>{props.message}</div>;\r\n};\r\n\r\nexport default Messages;\r\n","import React from 'react';\r\nimport s from './Dialogs.module.css';\r\nimport DialogsItem from './DialogsItem/DialogsItem';\r\nimport Messages from './Messages/Messages';\r\nimport {Navigate} from 'react-router-dom';\r\nimport {Field, reduxForm} from 'redux-form';\r\nimport {FormField} from '../common/FormsControls/FormsControls';\r\nimport {maxLengthCreator, required} from '../../utilites/validators/validators';\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    let state = props.dialogsPage\r\n\r\n    let messages = state.messagesData.map((m, index) => (\r\n        <Messages message={m.message} id={m.id} key={index}/>\r\n    ));\r\n\r\n    const onSubmit = (values) => {\r\n        props.sendMessage(values.newMessage)\r\n        values.newMessage = ''\r\n    };\r\n\r\n    if (!props.isAuth) return <Navigate to={'/login'}/>\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.names}>\r\n                <DialogsItem dialogsData={state.dialogsData}/>\r\n            </div>\r\n\r\n            <div className={s.messages}>\r\n                {messages}\r\n                <DialogsForm onSubmit={onSubmit}/>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst maxLength = maxLengthCreator(8)\r\n\r\nlet DialogsForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <Field elem={'textarea'} component={FormField} placeholder={'your message'} cols=\"30\" rows=\"10\"\r\n                   name={'newMessage'} validate={[required, maxLength]}\r\n            />\r\n            <div>\r\n                <button className=\"button\">\r\n                    Отправить\r\n                </button>\r\n            </div>\r\n        </form>)\r\n}\r\n\r\nDialogsForm = reduxForm({form: 'newMessageForm'})(DialogsForm)\r\n\r\nexport default Dialogs;\r\n","import {Navigate} from 'react-router-dom';\r\nimport React from 'react';\r\nimport {connect} from 'react-redux';\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Navigate to={'/login'}/>\r\n            return <Component {...this.props}/>\r\n        }\r\n    }\r\n\r\n    return connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n}","import {sendMessageCreator} from \"../../redux/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendMessage: (newMessage) => {\r\n            dispatch(sendMessageCreator(newMessage))\r\n        }\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect,\r\n)(Dialogs)"],"names":["props","dialogsItem","dialogsData","map","d","index","className","s","to","id","link","isActive","src","alt","name","message","maxLength","maxLengthCreator","DialogsForm","onSubmit","handleSubmit","Field","elem","component","FormField","placeholder","cols","rows","validate","required","reduxForm","form","state","dialogsPage","messages","messagesData","m","isAuth","values","sendMessage","newMessage","mapStateToPropsForRedirect","auth","compose","connect","dispatch","sendMessageCreator","Component","RedirectComponent","this","React","Dialogs"],"sourceRoot":""}